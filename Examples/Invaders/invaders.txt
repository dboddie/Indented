def mode number (byte)
    _call(0xffee 22)
    _call(0xffee number)

def cursor_off
    _call(0xffee 23)
    _call(0xffee 1)
    i = 0
    while i < 8
        _call(0xffee 0)
        i = i + 1

def vsync
    _call(0xfff4 19)

def check_key key (int8)
    if _call(0xfff4 129 key 255) == 0xffff8101
        return True
    else
        return False

def oscli command_addr (int16)
    _call(0xfff7 0 (command_addr & 0xff) (command_addr >> 8) & 0xff)

def load
    # Load sprites
    sprites_command = "LOAD SPRITES\r"
    oscli(_addr(sprites_command))

    routines_command = "LOAD ROUTINES\r"
    oscli(_addr(routines_command))

# Load the other files then change mode.

load()
mode(5)
cursor_off()

x = 1
y = 31
_call(0x4000 1 x y)

bullets_x = "\xff\xff\xff"
bullets_y = "\xff\xff\xff"
bullet = 0

while True

    new_x = x
    new_y = y
    moved = False

    if check_key(-73) and (y > 3)
        new_y = y - 1
        moved = True

    if check_key(-105) and (y < 61)
        new_y = y + 1
        moved = True

    if check_key(-74) and (y < 61)
        if bullets_y[bullet] == 255
            bullets_y[bullet] = y
            bullets_x[bullet] = x + 2
            bullet = bullet + 1
            if bullet == 3
                bullet = 0

    vsync()
    if moved
        _call(0x4000 0 x y)
        _call(0x4000 1 new_x new_y)
        x = new_x
        y = new_y
    
    i = 0
    while i < 3
        by = bullets_y[i]
        bx = bullets_x[i]
        if by != 255
            _call(0x4000 0 bx by)
            bx = bx + 2
            if bx < 40
                _call(0x4000 2 bx by)
                bullets_x[i] = bx
            else
                bullets_y[i] = 255
        i = i + 1
