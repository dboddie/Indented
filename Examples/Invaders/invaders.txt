def mode number (byte)
    _call(0xffee, 22)
    _call(0xffee, number)

def cursor_off
    _call(0xffee, 23)
    _call(0xffee, 1)
    i = 0
    while i < 8
        _call(0xffee, 0)
        i = i + 1

def vsync
    _call(0xfff4, 19)

def check_key key (int8)
    if _call(0xfff4, 129, key, 255) == 0xffff8101
        return True
    else
        return False

def oscli command_addr (int16)
    _call(0xfff7, 0, (command_addr & 0xff), (command_addr >> 8) & 0xff)

def load
    # Load sprites
    sprites_command = "LOAD SPRITES\r"
    oscli(_addr(sprites_command))

    routines_command = "LOAD ROUTINES\r"
    oscli(_addr(routines_command))

# Load the other files then change mode.

load()
mode(5)
cursor_off()

x = 2
y = 31
_call(0x4000, 1, x, y)

bullets_x = "\xff\xff\xff"
bullets_y = "\xff\xff\xff"
bullet = 0
fired = 0

enemies_x = "\xff\xff\xff\xff\xff\xff\xff\xff"
enemies_y = "\xff\xff\xff\xff\xff\xff\xff\xff"
enemies_counter = 10
next_enemy = 0
move_enemy = 0

while True

    new_x = x
    new_y = y
    moved = False

    if check_key(-98)
        if x > 2
            new_x = x - 1
            moved = True
    else
        if check_key(-67)
            if x < 20
                new_x = x + 1
                moved = True

    if check_key(-73)
        if y > 3
            new_y = y - 1
            moved = True
    else
        if check_key(-105)
            if y < 60
                new_y = y + 1
                moved = True

    if check_key(-74)
        if (bullets_y[bullet] == 255) and (fired == 0)
            bullets_y[bullet] = y
            bullets_x[bullet] = x + 2
            _call(0x4000, 2, x + 2, y)
            
            bullet = bullet + 1
            if bullet == 3
                bullet = 0
            
            fired = 10

    vsync()
    if moved
        _call(0x4000, 0, x, y)
        _call(0x4000, 1, new_x, new_y)
        x = new_x
        y = new_y

    i = 0
    while i < 3
        by = bullets_y[i]
        if by != 255
            bx = bullets_x[i]
            _call(0x4000, 0, bx, by)
            bx = bx + 2
            if bx < 39
                _call(0x4000, 2, bx, by)
                bullets_x[i] = bx
            else
                bullets_y[i] = 255
        i = i + 1

    if fired > 0
        fired = fired - 1

    enemies_counter = enemies_counter - 1
    
    if enemies_counter == 0
        enemies_counter = 10
        enemies_x[next_enemy] = 38
        ey = 32 + next_enemy
        enemies_y[next_enemy] = ey
        _call(0x4000, 3, 38, ey)
        next_enemy = (next_enemy + 1) & 7

    i = 0
    while i < 8
    
        ey = enemies_y[i]
        if ey != 255
            ex = enemies_x[i]
            _call(0x4000, 0, ex, ey)
            if ex > 1
                _call(0x4000, 3, ex - 1, ey)
                enemies_x[i] = ex - 1
            else
                enemies_y[i] = 255
        
        i = i + 1
