def mode number (byte)
    _call(0xffee 22)
    _call(0xffee number)

def cursor_off
    _call(0xffee 23)
    _call(0xffee 1)
    i = 0
    while i < 8
        _call(0xffee 0)
        i = i + 1

def vsync
    _call(0xfff4 19)

def check_keys
    if _call(0xfff4 129 -98 255) == 0xffff8101
        return 1
    if _call(0xfff4 129 -67 255) == 0xffff8101
        return 2
    if _call(0xfff4 129 -73 255) == 0xffff8101
        return 3
    if _call(0xfff4 129 -105 255) == 0xffff8101
        return 4
    return 0

def oscli command_addr (int16)
    _call(0xfff7 0 (command_addr & 0xff) (command_addr >> 8) & 0xff)

def load
    # Load sprites
    sprites_command = "LOAD SPRITES\r"
    oscli(_addr(sprites_command))

    routines_command = "LOAD ROUTINES\r"
    oscli(_addr(routines_command))

# Load the other files then change mode.

load()
mode(5)
cursor_off()

# Fill the playing area.

hwall = "11111111111111111111"
vwall = "10000000000000000001"

y = 0
while y < 32

    x = 0
    while x < 40
    
        if (y > 0) and (y < 31)
            sprite = vwall[x >> 1]
        else
            sprite = hwall[x >> 1]
        
        _call(0x4000 sprite x y)
        
        x = x + 2
    
    y = y + 1

x = 19
y = 15
_call(0x4000 2 x y)

while True

    key = check_keys()
    
    if key != 0
    
        vsync()
        _call(0x4000 0 x y)
        
        if (key == 1) and (x > 2)
            x = x - 1
        else
            if (key == 2) and (x < 36)
                x = x + 1
            else
                if (key == 3) and (y > 1)
                    y = y - 1
                else
                    if (key == 4) and (y < 30)
                        y = y + 1
        
        _call(0x4000 2 x y)
